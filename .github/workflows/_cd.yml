name: "Reusable CD workflow"

concurrency: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_call:
    inputs:
      package_name:
        description: "The package's name for which the CD pipeline should run."
        required: true
        type: string
    secrets:
      npm_token:
        description: "NPM secret key needed to publish the package on NPM."
        required: true

jobs:
  CD:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18.x

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: "Package info"
        id: package_info
        run: |
          echo "::set-output name=name::$(cat packages/${{ inputs.package_name }}/package.json | jq '.name' | tr -d '"')"
          echo "::set-output name=version::$(cat packages/${{ inputs.package_name }}/package.json | jq '.version' | tr -d '"')"

      - name: "Check version"
        id: check_version
        run: |
          REMOTE_VERSION=$(yarn npm info ${{ steps.package_info.outputs.name }} --json | jq '.version' | tr -d '"')

          if [ ${{ steps.package_info.outputs.version }} = $REMOTE_VERSION ]; then
            echo "The local package ${{ steps.package_info.outputs.name }}@${{ steps.package_info.outputs.version }} is already on the registry!";

            exit -1;
          fi
            
          exit 0;

      - name: Setup
        run: yarn install

      - name: Build bundle
        run: yarn workspace ${{ steps.package_info.outputs.name }} build

      - name: Publish
        run: |
          yarn config set npmAuthToken $NPM_TOKEN
          yarn --cwd "./packages/${{ inputs.package_name }}" npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.npm_token }}

      - name: "Read changelog"
        id: read_changelog
        run: |
          CHANGELOG_ENTRY=$(yarn changesets-changelog-entry ./packages/${{ inputs.package_name }}/CHANGELOG.md ${{ steps.package_info.outputs.version }})
          CHANGELOG_ENTRY="${CHANGELOG_ENTRY//'%'/'%25'}"
          CHANGELOG_ENTRY="${CHANGELOG_ENTRY//$'\n'/'%0A'}"
          CHANGELOG_ENTRY="${CHANGELOG_ENTRY//$'\r'/'%0D'}"

          echo "::set-output name=changelog_entry::$CHANGELOG_ENTRY"

      - name: "Create Release"
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.read_changelog.outputs.changelog_entry }}
          tag: ${{ steps.package_info.outputs.name }}@${{ steps.package_info.outputs.version }}
